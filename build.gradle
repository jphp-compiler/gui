def javaVersion = '1.8';
def projectVersion = '0.9.0';
def jphpVersion = "0.9.0-SNAPSHOT";

rootProject.ext.jphpVersion = jphpVersion;

if (Boolean.getBoolean("release")) {
    jphpVersion = projectVersion
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = 2.12;
}


allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'

    project.group = 'org.develnext'
    project.version = projectVersion

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    task sourcesJar(type: Jar, dependsOn: 'classes') {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    configurations {
        provided
    }

    sourceSets {
        main { compileClasspath += configurations.provided }
    }
}

subprojects {
    def dirName = file(it.name).name;
    def bundleDirRoot = "${projectDir}/../../develnext/misc/library/bundles/";
    def bundleDir = "${bundleDirRoot}/${dirName}/";

    if (it.name.startsWith("develnext-bundles") || it.name.endsWith("-bundle")) {
        println "-> Detecting bundle '$it.name' ...";

        def resFile = file("$projectDir/.resource")

        if (!resFile.exists()) {
            resFile = file("$projectDir/src/.resource")
        }

        if (resFile.exists()) {
            clean {
                delete bundleDir
            }

            def pr = it;

            jar {
                doLast {
                    copy {
                        from jar.archivePath
                        from(pr.configurations.runtime) {
                            exclude '**/jphp-runtime-*.jar'
                        }

                        into bundleDir
                    }

                    copy {
                        from resFile
                        into "$bundleDir/.."
                        rename ".resource", "${dirName}.resource"
                    }

                    fileTree(bundleDir).visit { FileVisitDetails el ->
                        def name = el.getName()

                        if (name.endsWith(".jar")) {
                            name = name.replaceAll(/(-[0-9]+|\.[0-9]+|-SNAPSHOT)/, "");

                            if (!name.equals(el.getName())) {
                                println "Rename '" + el.file.parent + "/" + name + "' file"

                                def file = file(el.file.parent + "/" + name)

                                if (file.exists()) {
                                    file.delete()
                                }

                                if (!el.file.renameTo(file)) {
                                    el.file.delete()
                                }
                            }
                        }
                    }
                }
            }
        } else {
            println "WARNING, Bundle '$it.name' doesn't have '$projectDir/.resource' file!";
        }
    }
}

project(':jphp-gui-ext') {
    dependencies {
        compile "org.develnext.jphp:jphp-core:$jphpVersion"
        compile "org.develnext.jphp:jphp-xml-ext:$jphpVersion"
    }
}

project(':jphp-game-ext') {
    dependencies {
        compile 'org.dyn4j:dyn4j:3.2.1'

        compile (project(':jphp-gui-ext')) {
            transitive = false
        }

        compile "org.develnext.jphp:jphp-runtime:$jphpVersion"
    }
}

project(':jphp-desktop-hotkey-ext') {
    dependencies {
        compile "org.develnext.jphp:jphp-runtime:$jphpVersion"
        compile fileTree(dir: 'lib', include: ['*.jar'])
    }
}

project(':jphp-systemtray-ext') {
    dependencies {
        compile "org.develnext.jphp:jphp-runtime:$jphpVersion"
        provided project(':jphp-gui-ext')
    }
}

project(':jphp-desktop-ext') {
    dependencies {
        compile project(':jphp-gui-ext')
        compile "org.develnext.jphp:jphp-runtime:$jphpVersion"
    }
}

project(':jphp-parser') {
    dependencies {
        compile "org.develnext.jphp:jphp-core:$jphpVersion"
    }
}

project(':jphp-app-framework') {
    dependencies {
        compile project(':jphp-gui-ext')
        compile "org.develnext.jphp:jphp-core:$jphpVersion"
    }
}

project(':develnext') {
    apply plugin: 'application'

    dependencies {
        compile "org.develnext.jphp:jphp-core:$jphpVersion"

        compile project(':develnext-launcher')
        compile project(':develnext-designer')
        compile project(':jphp-gui-richtext-ext')
        compile project(':jphp-app-framework')
        compile project(':jphp-desktop-ext')
        compile project(':jphp-systemtray-ext')
        compile project(':jphp-parser')
        compile project(':jphp-zip-ext/jphp-zip-ext')
        compile project(':develnext-doc')
        compile project(':develnext-store')
        compile project(':develnext-java-platform')
        compile project(':develnext-js-platform')

        if (new File("./develnext-control/build.gradle").exists()) {
            compile project(':develnext-control')
        }

        // bundles.
        provided project(':develnext-bundles/dn-httpclient-bundle')
        provided project(':develnext-bundles/dn-jsoup-bundle')
        provided project(':develnext-bundles/dn-mail-bundle')
        provided project(':develnext-bundles/dn-sql-bundle')
        provided project(':develnext-bundles/dn-sqlite-bundle')
        provided project(':develnext-bundles/dn-mysql-bundle')
        provided project(':develnext-bundles/dn-pgsql-bundle')
        provided project(':develnext-bundles/dn-firebirdsql-bundle')
        provided project(':develnext-bundles/dn-game2d-bundle')
        provided project(':develnext-bundles/dn-systemtray-bundle')
        provided project(':develnext-bundles/dn-hotkey-bundle')
        provided project(':jphp-zip-ext/dn-zip-bundle')
        provided project(':develnext-bundles/dn-jfoenix-bundle')
        //provided project(':develnext-bundles/dn-controlfx-bundle')

        // stubs.
        compile project(':develnext-stubs/dn-php-sdk')
        compile project(':develnext-stubs/dn-zend-php-sdk')

        compile "org.develnext.jphp:jphp-xml-ext:$jphpVersion"
        //compile "org.develnext.jphp:jphp-zip-ext:$jphpVersion"
        compile "org.develnext.jphp:jphp-json-ext:$jphpVersion"
        compile "org.develnext.jphp:jphp-zend-ext:$jphpVersion"
        compile "org.develnext.jphp:jphp-sql-ext:$jphpVersion"
        compile "org.develnext.jphp:jphp-debugger:$jphpVersion"

        //compile fileTree(dir: 'libs', include: '*.jar')
    }
}

